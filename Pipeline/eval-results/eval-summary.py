import os
from statistics import mean

# TODO : update results here after each eval run!!

ratings = {'Comprehensiveness': ['4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '2', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '2', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4'], 'Empathy': ['4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '3', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '2', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '2', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4'], 'Conciseness': ['3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '2', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4', '4', '4', '4', '4', '3', '5', '4', '4', '4', '4', '4', '4', '4', '4', '3', '4']}

# time for 101 questions, 3 metrics
total_time_taken = 869.0499777793884

# tokens
num_tokens = [134,
62,
137,
122,
60,
55,
57,
63,
42,
75,
54,
38,
78,
156,
87,
68,
106,
104,
101,
80,
158,
190,
63,
57,
58,
100,
54,
80,
76,
75,
63,
73,
137,
53,
115,
78,
185,
162,
190,
70,
60,
66,
7,
184,
130,
157,
52,
53,
72,
81,
161,
90,
157,
54,
169,
56,
74,
203,
172,
115,
55,
162,
62,
55,
85,
93,
88,
50,
54,
62,
48,
118,
180,
109,
47,
99,
84,
172,
96,
172,
82,
122,
70,
64,
110,
66,
55,
130,
86,
56,
52,
152,
116,
177,
157,
78,
57,
155,
66,
56,
51]

time_taken = [8.351866006851196,
5.228721857070923,
7.837558031082153,
7.978579998016357,
5.018893241882324,
4.50999116897583,
4.541353225708008,
5.007826089859009,
4.842525959014893,
5.948564291000366,
5.185407876968384,
3.8259530067443848,
5.703296899795532,
7.949002027511597,
6.3042449951171875,
5.505558013916016,
6.508740663528442,
6.814146041870117,
6.748718023300171,
5.695191860198975,
9.157243013381958,
9.640883922576904,
5.202542781829834,
5.039832830429077,
4.887701988220215,
7.3995630741119385,
5.159331798553467,
5.963106155395508,
5.704909086227417,
5.643359899520874,
5.1258790493011475,
5.893136978149414,
7.952483892440796,
4.57402229309082,
7.072244167327881,
5.748934984207153,
9.650837898254395,
9.189123153686523,
11.796377182006836,
5.970510959625244,
5.1869423389434814,
5.927186012268066,
3.4224789142608643,
11.975468873977661,
9.114625215530396,
10.64303994178772,
5.168334007263184,
5.10746693611145,
6.404764890670776,
6.646888017654419,
11.001299858093262,
6.447161674499512,
10.676237106323242,
5.507015943527222,
10.968883991241455,
5.2356650829315186,
6.4341089725494385,
13.112475156784058,
10.99273133277893,
8.02080488204956,
5.403873920440674,
10.971207857131958,
5.911816120147705,
5.395588159561157,
6.808260202407837,
7.524335145950317,
7.221611976623535,
5.340452194213867,
5.476108074188232,
5.6589789390563965,
4.933624029159546,
8.221472024917603,
12.021562099456787,
8.175852060317993,
5.462500810623169,
7.633661985397339,
7.035329580307007,
11.583816289901733,
7.539585113525391,
11.4364333152771,
6.696234941482544,
9.139966249465942,
6.134788990020752,
6.001976728439331,
8.052436113357544,
6.065855026245117,
5.796989917755127,
8.725363969802856,
7.519014120101929,
5.193994998931885,
5.007045030593872,
10.279129266738892,
8.571663856506348,
12.50190806388855,
10.772676706314087,
7.494278192520142,
5.5696611404418945,
10.476586103439331,
6.398088216781616,
5.458620071411133,
5.112941265106201]


# token/sec per quetion

tokens_per_second = [tokens / time for tokens, time in zip(num_tokens, time_taken)]


# get average ratings
averages = {key: mean(map(int, values)) for key, values in ratings.items()}

print("Average ratings are: ",averages)

print("average time per question: ", sum(time_taken)/len(time_taken))

print("average tokens/sec: ", sum(tokens_per_second)/len(tokens_per_second))